{"version":3,"sources":["assets\\Script\\MoodBar.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MoodBar extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    positiveIcon: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    negativeIcon: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    mutualIcon: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    positiveMoodBar: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    negativeMoodBar: cc.Node = null;\r\n\r\n    @property(cc.Float)\r\n    currentMoodValue = 0;\r\n\r\n    @property(cc.Float)\r\n    targetMoodValue = 0;\r\n\r\n    @property(cc.Float)\r\n    moodLimit = 100;\r\n\r\n    @property(cc.Node)\r\n    game = null;\r\n\r\n    @property(cc.Float)\r\n    incrementSpeed = 15;\r\n\r\n    setCurrentMoodValue(newValue: number) {\r\n        this.currentMoodValue = newValue;\r\n    }\r\n\r\n    setTargetMoodValue(newValue: number) {\r\n        this.targetMoodValue = newValue;\r\n    }\r\n\r\n    setMoodLimit(newValue: number) {\r\n        this.moodLimit = newValue;\r\n    }\r\n\r\n    addMoodValue(deltaValue: number) {\r\n        this.targetMoodValue += deltaValue;\r\n    }\r\n\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {this.node.cascadeOpacity = false;}\r\n\r\n    start () {\r\n\r\n    }\r\n\r\n    update (dt) {\r\n        if (this.currentMoodValue < this.targetMoodValue) {\r\n            this.currentMoodValue = Math.min(this.targetMoodValue, this.currentMoodValue+this.incrementSpeed * dt);\r\n        } else if (this.currentMoodValue > this.targetMoodValue) {\r\n            this.currentMoodValue = Math.max(this.targetMoodValue, this.currentMoodValue-this.incrementSpeed * dt);\r\n        }\r\n\r\n        if (this.currentMoodValue >= 0) {\r\n            // Show positiveIcon and positive mood bar\r\n            this.negativeMoodBar.width = 0;\r\n            this.positiveMoodBar.width = Math.min(1, Math.abs(this.currentMoodValue)/this.moodLimit) * this.node.width / 2;\r\n            this.positiveMoodBar.active = true;\r\n\r\n            this.negativeIcon.active = false;\r\n\r\n            if (this.currentMoodValue == 0) {\r\n                this.positiveIcon.active = false;\r\n                this.mutualIcon.active = true;\r\n            } else {\r\n                this.mutualIcon.active = false;\r\n                this.positiveIcon.active = true;\r\n                this.positiveIcon.setPosition(Math.min(1, Math.abs(this.currentMoodValue)/this.moodLimit) * this.node.width / 2, 0);\r\n            }\r\n        } else {\r\n            // Show negativeIcon and negative mood bar\r\n            this.positiveMoodBar.width = 0;\r\n            this.negativeMoodBar.width = Math.min(1, Math.abs(this.currentMoodValue)/this.moodLimit) * this.node.width / 2;\r\n            this.negativeMoodBar.active = true;\r\n\r\n            this.positiveIcon.active = false;\r\n            this.mutualIcon.active = false;\r\n            this.negativeIcon.active = true\r\n            this.negativeIcon.setPosition(Math.max(-1, - Math.abs(this.currentMoodValue)/this.moodLimit) * this.node.width / 2, 0);\r\n\r\n            if (Math.abs(this.currentMoodValue) >= this.moodLimit) {\r\n                this.game.getComponent(\"Game\").gameOver();\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}