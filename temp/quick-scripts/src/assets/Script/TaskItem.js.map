{"version":3,"sources":["assets\\Script\\TaskItem.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\nimport Task from \"./Task\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TaskItem extends cc.Component {\r\n    @property(cc.String)\r\n    id = 'testid'\r\n\r\n    // On spawn the task Item should spawn label for itself.\r\n    @property(cc.Prefab)\r\n    labelTemplate = null;\r\n\r\n    @property({\r\n        type: Task,\r\n    })\r\n    task: Task = null;\r\n\r\n    // TODO: remember to add scheduleBar & taskItemAreaLayout when spawning tasks\r\n    @property(cc.Node)\r\n    scheduleBar: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    taskItemAreaLayout: cc.Node = null;\r\n\r\n    @property(cc.Boolean)\r\n    canMove = true;\r\n\r\n    @property(cc.Boolean)\r\n    used = false;\r\n\r\n    _oldPosition:cc.Vec3 = null;\r\n\r\n    target: cc.Node = null;\r\n\r\n    scheduleBarRect: cc.Rect = null;\r\n    taskItemAreaRect: cc.Rect = null;\r\n\r\n    getTaskDuration() {\r\n        if (this.task) {\r\n            return this.task.duration;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    _spawnLabel() {\r\n        let newLabel = cc.instantiate(this.labelTemplate);\r\n        newLabel.width = this.node.width * 0.95;\r\n        newLabel.getComponent(cc.Label).string = this.task.text;\r\n        this.node.addChild(newLabel);\r\n    }\r\n\r\n    _onTouchMove(touchEvent) {\r\n        if (this.canMove) {\r\n            // Whenever moving, remove it from schedule bar\r\n            if (this.node.parent === this.scheduleBar) {\r\n                this.node.parent = this.taskItemAreaLayout;\r\n                this.scheduleBar.getComponent(\"ScheduleBar\").markFree(this.node);\r\n            }\r\n\r\n            this.node.scale = 1.1;\r\n        \r\n            let location = touchEvent.getLocation();\r\n            this.node.position = this.node.parent.convertToNodeSpaceAR(location);\r\n        }\r\n    }\r\n    \r\n    _onTouchEnd(touchEvent) {\r\n        if (this.canMove) {\r\n            this.node.scale = 1;\r\n\r\n            this.taskItemAreaRect = this.taskItemAreaLayout.getBoundingBox();\r\n            this.scheduleBarRect = this.scheduleBar.getBoundingBox();\r\n\r\n            // get world location from touch event\r\n            let location = touchEvent.getLocation();\r\n\r\n            // Get target location relative to target's parent to compare to rectangle container\r\n            // let locationTaskItemAreaAR: cc.Vec3 = this.taskItemAreaLayout.parent.convertToNodeSpaceAR(location);\r\n            let locationScheduleBarAR: cc.Vec3 = this.scheduleBar.parent.convertToNodeSpaceAR(location);\r\n            \r\n            // If the point lands within schedulebar area, check the scheduleBar.validate() method for validated loacation\r\n            if (this.scheduleBarRect.contains(cc.v2(locationScheduleBarAR.x, locationScheduleBarAR.y))){\r\n                // Translate the location to scheduleBar relative\r\n                let locationWithinScheduleBarAR = this.scheduleBar.convertToNodeSpaceAR(location);\r\n\r\n                // Get relative location\r\n                let validatedPosition = this.scheduleBar.getComponent(\"ScheduleBar\").validate(locationWithinScheduleBarAR, this.node);\r\n                if (validatedPosition != null) {\r\n                    this.node.parent = this.scheduleBar;\r\n                    this.node.position = validatedPosition;\r\n\r\n                    // Rearrange TaskItemAreaLayout\r\n                    this.taskItemAreaLayout.getComponent(\"TaskItemAreaLayout\").rearrange();\r\n                    // Move to schedule bar successful\r\n                    return;\r\n                }\r\n            } \r\n            // If not moved to scheduleBar, then reset back to taskItemAreaLayout\r\n            this.node.parent = this.taskItemAreaLayout;\r\n\r\n            // Call update on layout\r\n            this.taskItemAreaLayout.getComponent(\"TaskItemAreaLayout\").rearrange();\r\n\r\n            return;            \r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    onLoad() {\r\n        if (!this.task) {\r\n            throw (\"None task found for onLoad()!\")\r\n        }\r\n        // Spawn label\r\n        this._spawnLabel();\r\n\r\n        // save original position\r\n        this._oldPosition = this.node.position;\r\n      \r\n        this.node.on(cc.Node.EventType.TOUCH_START, ()=>{this._oldPosition = this.node.position;}, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this._onTouchMove, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this._onTouchEnd, this);\r\n    }\r\n\r\n    onDestroy() {\r\n        this.node.off(cc.Node.EventType.TOUCH_START, ()=>{this._oldPosition = this.node.position;}, this);\r\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this._onTouchMove, this);\r\n        this.node.off(cc.Node.EventType.TOUCH_END, this._onTouchEnd, this);\r\n    }\r\n\r\n    start () {\r\n        \r\n    }\r\n\r\n    update (dt) {\r\n    }\r\n}\r\n"]}