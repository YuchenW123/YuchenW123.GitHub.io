{"version":3,"sources":["assets\\Script\\ScheduleBar.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport Schedule from \"./Schedule\";\r\n\r\nexport const RESOLUTION: number = 15;\r\n\r\nconst PLACEHOLDER = new cc.Node();\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ScheduleBar extends cc.Component {\r\n    @property({\r\n        type: Schedule,\r\n    })\r\n    scheduleChart: Schedule = null;\r\n\r\n    // Stores the occupied information\r\n    @property([cc.Node])\r\n    cells:cc.Node[] = [];\r\n\r\n    @property(cc.Node)\r\n    game: cc.Node = null;\r\n\r\n    currentCellIndex = -1;\r\n\r\n    _checkFreeSpace(xlocation: number, duration: number) {\r\n        let targetCellIndex = Math.floor(xlocation / (this.node.width / this.cells.length));\r\n\r\n        for (let i = targetCellIndex; i < targetCellIndex + duration; i++) {\r\n            if (this.cells[i] != null || i >= this.cells.length) {\r\n                return -1;\r\n            }\r\n        }\r\n\r\n        return targetCellIndex;\r\n    }\r\n\r\n    // Duration here is resoluted\r\n    _markOccupied(targetCellIndex, durationInCells, taskNode) {\r\n        for (let i = targetCellIndex; i < targetCellIndex + durationInCells; i++) {\r\n            this.cells[i] = taskNode;\r\n        }\r\n        return this.cells;\r\n    }\r\n\r\n    markFree(taskNode: cc.Node) {\r\n        let startIndex = this.cells.findIndex(\r\n            (node) => node \r\n            && node.getComponent(\"TaskItem\") \r\n            && node.getComponent(\"TaskItem\").id === taskNode.getComponent(\"TaskItem\").id\r\n                       , this);\r\n        let taskDuration = taskNode.getComponent(\"TaskItem\").getTaskDuration();\r\n        if (startIndex == -1 || taskDuration == -1) {\r\n            return -1;\r\n        } else {\r\n            for (let i = startIndex; i < startIndex + taskDuration/RESOLUTION; i++) {\r\n                this.cells[i] = null;\r\n            }\r\n            return taskDuration;\r\n        }\r\n    }\r\n\r\n    _durationToPixel(duration: number) {\r\n        return Math.floor(this.node.width * duration / this.scheduleChart.duration);\r\n    }\r\n\r\n    // If the given duration can be fitted into the closest grid location,\r\n    // return the closest fitted location, otherwise return null\r\n    validate(location: cc.Vec2, taskNode: cc.Node) : cc.Vec2 {\r\n        let duration = taskNode.getComponent(\"TaskItem\").getTaskDuration() / RESOLUTION;\r\n        let freeIndex =  this._checkFreeSpace(location.x, duration);\r\n        if (freeIndex >= 0) {\r\n            console.log(\"freeIndex in Validate(): \" + freeIndex);\r\n            this._markOccupied(freeIndex, duration, taskNode)\r\n            return cc.v2(freeIndex * this.node.width / this.cells.length, this.node.y);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    // Returns the position of the inserted TaskItem\r\n    insertFixedTask(fixedTime: number, duration: number, taskNode: cc.Node) : cc.Vec2 {\r\n        let freeIndex = Math.floor(fixedTime/RESOLUTION);\r\n        this._markOccupied(freeIndex, duration/RESOLUTION, taskNode);\r\n        return cc.v2(freeIndex * this.node.width / this.cells.length, this.node.y);\r\n    }\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.currentCellIndex = -1;\r\n        while (this.cells.length < this.scheduleChart.duration / RESOLUTION) {\r\n            this.cells.push(null);\r\n        }\r\n    }\r\n\r\n    start () {\r\n    }\r\n\r\n    update (dt) {\r\n        let timerValue = this.game.getComponent(\"Game\").timer;\r\n        let newCellIndex = Math.floor(timerValue / RESOLUTION);\r\n\r\n        if (newCellIndex !== this.currentCellIndex) {\r\n            this.currentCellIndex = newCellIndex;\r\n            console.log(newCellIndex);\r\n            if (this.cells[newCellIndex] && this.cells[newCellIndex].getComponent(\"TaskItem\").used == false) {\r\n                this.game.getComponent(\"Game\").addMoodValue(this.cells[newCellIndex].getComponent(\"TaskItem\").task.moodEffect);\r\n                this.cells[newCellIndex].getComponent(\"TaskItem\").used = true;\r\n                this.cells[newCellIndex].getComponent(\"TaskItem\").canMove = false;\r\n            } else {\r\n                this.cells[newCellIndex] = PLACEHOLDER;\r\n            }\r\n        }\r\n        this.node.parent.getChildByName(\"TimeMask\").width = timerValue/this.scheduleChart.duration * this.node.width;\r\n    }\r\n}\r\n"]}